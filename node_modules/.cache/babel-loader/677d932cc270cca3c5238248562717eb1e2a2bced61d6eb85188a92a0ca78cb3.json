{"ast":null,"code":"var _jsxFileName = \"/Users/saiansh/housing-market-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardSwiping from './CardSwiping';\nimport './index.css';\nimport RecommendedHouses from './RecommendedHouses';\nimport Login from './login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentHouse, setCurrentHouse] = useState(null);\n  const [recommendedHouses, setRecommendedHouses] = useState([]);\n  const [login, setLogin] = useState(false);\n\n  // Fetch a random house from the backend\n  const fetchRandomHouse = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/random-house');\n      setCurrentHouse(response.data);\n    } catch (error) {\n      console.error('Error fetching random house:', error);\n    }\n  };\n\n  // Fetch recommendations for a house\n  const fetchRecommendations = async houseId => {\n    try {\n      const response = await axios.post('http://localhost:5000/recommend', {\n        houseId\n      });\n      setRecommendedHouses(response.data);\n      console.log('Recommended Houses:', response.data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    }\n  };\n\n  // Handle swipe action\n  const handleSwipe = (direction, houseId) => {\n    if (direction === 'right') {\n      fetchRandomHouse();\n      fetchRecommendations(houseId);\n    } else if (direction === 'left') {\n      fetchRandomHouse();\n    }\n  };\n  const handleLogin = () => {\n    setLogin(true);\n  };\n\n  // Load initial random house on component mount\n  useEffect(() => {\n    fetchRandomHouse();\n  }, []);\n  if (login === false) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      handleLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: currentHouse && /*#__PURE__*/_jsxDEV(CardSwiping, {\n        house: currentHouse,\n        onSwipe: direction => handleSwipe(direction, currentHouse._id)\n      }, currentHouse._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recommended Houses:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecommendedHouses, {\n      recommendedHouses: recommendedHouses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zILqwCPubaUyc7htq9nEfARdkLM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","CardSwiping","RecommendedHouses","Login","jsxDEV","_jsxDEV","App","_s","currentHouse","setCurrentHouse","recommendedHouses","setRecommendedHouses","login","setLogin","fetchRandomHouse","response","get","data","error","console","fetchRecommendations","houseId","post","log","handleSwipe","direction","handleLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","house","onSwipe","_id","_c","$RefreshReg$"],"sources":["/Users/saiansh/housing-market-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CardSwiping from './CardSwiping';\nimport './index.css';\nimport RecommendedHouses from './RecommendedHouses';\nimport Login from './login';\n\nfunction App() {\n  const [currentHouse, setCurrentHouse] = useState(null);\n  const [recommendedHouses, setRecommendedHouses] = useState([]);\n  const [login, setLogin] = useState(false);\n\n  // Fetch a random house from the backend\n  const fetchRandomHouse = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/random-house');\n      setCurrentHouse(response.data);\n    } catch (error) {\n      console.error('Error fetching random house:', error);\n    }\n  };\n\n  // Fetch recommendations for a house\n  const fetchRecommendations = async (houseId) => {\n    try {\n      const response = await axios.post('http://localhost:5000/recommend', { houseId });\n      setRecommendedHouses(response.data);\n      console.log('Recommended Houses:', response.data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    }\n  };\n\n  // Handle swipe action\n  const handleSwipe = (direction, houseId) => {\n    if (direction === 'right') {\n      fetchRandomHouse();\n      fetchRecommendations(houseId);\n    } else if (direction === 'left') {\n      fetchRandomHouse();\n    }\n  };\n\n  const handleLogin = () => {\n    setLogin(true);\n  }\n\n  // Load initial random house on component mount\n  useEffect(() => {\n    fetchRandomHouse();\n  }, []);\n\n  if (login === false) {\n    return(\n    <Login handleLogin = {handleLogin}/>\n    );\n  }\n  return (\n    <div className=\"app\">\n      <div className=\"cardContainer\">\n        {currentHouse && (\n          <CardSwiping\n            key={currentHouse._id}\n            house={currentHouse}\n            onSwipe={(direction) => handleSwipe(direction, currentHouse._id)}\n          />\n        )}\n      </div>\n      <h2>Recommended Houses:</h2>\n      <RecommendedHouses recommendedHouses={recommendedHouses} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}